/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  CompDataSegmentItem as PrismaCompDataSegmentItem,
} from "@prisma/client";

export class CompDataSegmentItemServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CompDataSegmentItemCountArgs, "select">
  ): Promise<number> {
    return this.prisma.compDataSegmentItem.count(args);
  }

  async compDataSegmentItems(
    args: Prisma.CompDataSegmentItemFindManyArgs
  ): Promise<PrismaCompDataSegmentItem[]> {
    return this.prisma.compDataSegmentItem.findMany(args);
  }
  async compDataSegmentItem(
    args: Prisma.CompDataSegmentItemFindUniqueArgs
  ): Promise<PrismaCompDataSegmentItem | null> {
    return this.prisma.compDataSegmentItem.findUnique(args);
  }
  async createCompDataSegmentItem(
    args: Prisma.CompDataSegmentItemCreateArgs
  ): Promise<PrismaCompDataSegmentItem> {
    return this.prisma.compDataSegmentItem.create(args);
  }
  async updateCompDataSegmentItem(
    args: Prisma.CompDataSegmentItemUpdateArgs
  ): Promise<PrismaCompDataSegmentItem> {
    return this.prisma.compDataSegmentItem.update(args);
  }
  async deleteCompDataSegmentItem(
    args: Prisma.CompDataSegmentItemDeleteArgs
  ): Promise<PrismaCompDataSegmentItem> {
    return this.prisma.compDataSegmentItem.delete(args);
  }
}
